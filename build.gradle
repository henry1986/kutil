buildscript {
    ext.kotlin_version = '1.3.61'
    ext.microutils_logging_version = '1.6.26'
    ext.kutil_version = '0.2.2'

    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin-platform-common'
apply plugin: 'maven-publish'

allprojects {
    group 'org.daiv.util'
    version "$kutil_version"
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: "com.jfrog.artifactory"

    artifactory {
        contextUrl = "${daiv_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
        publish {
            repository {
                repoKey = 'gradle-dev-local'
                username = "${daiv_user}"
                password = "${daiv_password}"
                maven = true

            }
            defaults {
                publications('mavenJava')
            }

        }
        resolve {
            repository {
                repoKey = 'gradle-dev'
                username = "${daiv_user}"
                password = "${daiv_password}"
                maven = true

            }
        }
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar
//            artifact sourceJar
//            artifact dokkaJavadoc
//            artifact javadocJar
            }
        }
    }
}
def jvmProjects = subprojects.findAll { gradle.ext.jvmProjects.contains(it.name) }

configure(jvmProjects) {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-platform-jvm'
    apply plugin: 'org.junit.platform.gradle.plugin'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

        compile "io.github.microutils:kotlin-logging:$microutils_logging_version"
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'
        testCompile "io.mockk:mockk:1.9.3"
        testCompile 'org.jetbrains.kotlin:kotlin-test:1.1.0'
        testCompile('org.jetbrains.spek:spek-api:1.1.5') {
            exclude group: 'org.jetbrains.kotlin'
        }
        testRuntime 'org.junit.platform:junit-platform-launcher:1.0.0'
        testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
            exclude group: 'org.junit.platform'
            exclude group: 'org.jetbrains.kotlin'
        }
    }
}
repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
    compile group: 'io.github.microutils', name: 'kotlin-logging-common', version: "$microutils_logging_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
}

